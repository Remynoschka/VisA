// Une macro-squelette calculer OTSU.
// Version: 0.1
// Date: sept 2010
// Author: L. Macaire
 
macro "modification_saturation" {

// r�cup�ration du ID de l'image
image = getImageID();

// r�cup�ration de la taille W x H 
W = getWidth();
H = getHeight();

run("Duplicate...", "title=binarisee");
image_binaire = getImageID();

getHistogram (level,histo,256);

// affichage de l'histogramme
for ( i =0 ; i<= 255; i++)
	{
	print ("histo[",level[i],"] =", histo[i]);
	}


// valeur initiale de omega1 mu1 omega2 mu2 omega3 mu3

//omega = nb de px
//somme = somme des valeurs
//mu = valeur moy des px

omega1=histo[0]+histo[1];
somme1=histo[1];
mu1 = somme1/omega1;

omega2=histo[2];
mu2=2;
somme2 = 2*histo[2]

omega3=histo[255];
somme3=0;
for ( i =0 ; i< 255; i++)
	{
	omega3=histo[i]+ omega3;
	somme3=i*histo[i]+ somme3;
	}
mu3 = somme3/omega3;


max_sigma_between = omega1 * omega2 * omega3 * ( mu1 - mu2 - mu3) * (mu1 - mu2 - mu3);
i_max = 255;
for (t2 = 2 ; t2 < 255 ; t2++){
	for (t1 = 0; t1 <t2-1;t1++){
		seuil1 = t1;
		seuil2 = 255 -t2;

		//calcul des omegas
		for (i = 0 ;i <= t1 ; i++){
			omega1 = omega1 + histo[i];
		}
		for (i = t1+1 ; i <= t2 ; i++){
			omega2 = omega2 + histo[i];
		}
		for (i = t2+1 ; i <= 255 ; i++){
			omega3 = omega3 - histo[i];
		}


		print ("t1=",t1,"t2=",t2,"omega1=",omega1,"somme1=",somme1,"omega2=",omega2,"somme2=",somme2);

		// si les classes sont vides
		if (omega1 * omega2 * omega3 !=0){
		
			print ("cond verifiee");
	
			mu1 = somme1/omega1;
			mu2 = somme2/omega2;
			mu3 = somme3/omega3;

			sigma_between = omega1 * omega2 * omega3 * ( mu1 - mu2) * (mu1 - mu2);
	
			if (sigma_between > max_sigma_between){
				seuil1_max = seuil1;
				seuil2_max = seuil2;
				max_sigma_between = sigma_between;
			}

		}
	}
}

selectImage(image_binaire);
print ("seuil seuil1_max=",seuil1_max);
setThreshold(0,seuil1_max);
setThreshold(seuil1_max,seuil2_max);
run("Convert to Mask");

}

Dialog.create("Fin");
Dialog.addMessage(" Cliquer sur OK pour terminer le traitement sur la saturation");
Dialog.show();


}

