// Author: Remy FRANCOIS

macro "multiSeuillage" {	

	W = getWidth();
	H = getHeight();
    run ("Duplicate...", "title=image");
	selectWindow("image");
	run("Split Channels");
	// seuiller l'image rouge
	selectWindow("image (red)");	
	getHistogram (level,histo,256);
	// valeur initiale de omega1 mu1 omega2 mu2
	omega1=0;
	somme1=0;
	for ( i =0 ; i< 255; i++)
		{
		omega1=histo[i]+ omega1;
		somme1=i*histo[i]+ somme1;
		}

	mu1 = somme1/omega1;

	somme2 = 0;
	omega2= histo[255];
	mu2=255;


	max_sigma_between = omega1 * omega2 * ( mu1 - mu2) * (mu1 - mu2);
	seuilRouge = 255;

	for (val = 1; val <255;val++){
		i = 255 -val;	

		omega1 = omega1 - histo[i];
		omega2 = omega2 + histo[i];

		somme1 = somme1 -  histo[i] * i;
		somme2 = somme2 +  histo[i] * i;
		if (omega1 * omega2 !=0){
			mu1 = somme1/omega1;
			mu2 = somme2/omega2;
		
			sigma_between = omega1 * omega2 * ( mu1 - mu2) * (mu1 - mu2);
		
			if (sigma_between > max_sigma_between){
				seuilRouge = i;
				max_sigma_between = sigma_between;
			}

		}
	}
	print("Seuil rouge = ", seuilRouge);
	
	//seuiller l'image verte
	selectWindow("image (green)");	
	getHistogram (level,histo,256);

	omega1 = 0;
	somme1 = 0;
	mu1 = 0;

	omega2 = 0;
	somme2 = 0;
	mu2 = 0;

	omega3 = 0;
	somme3 = 0;
	mu3 = 0;

	max_sigma_between = -1;

	seuil1 = 255;
	seuil2 = 255;

	for(t2 = 2; t2 <255; t2++) {
		for(t1 = 0; t1 < t2-1; t1++) {
			omega1 = 0;
			somme1 = 0;
			
			omega2 = 0;
			somme2 = 0;
			
			omega3 = 0;
			somme3 = 0;
			
			// calcul des omegas
			for(i=0; i<t1; i++) {
				omega1 = omega1 + histo[i];
				somme1 = somme1 + histo[i] * i;
			}
			for(i=t1; i<t2; i++) {
				omega2 = omega2 + histo[i];
				somme2 = somme2 + histo[i] * i;
			}
			for(i=t2; i<255; i++) {
				omega3 = omega3 + histo[i];
				somme3 = somme3 + histo[i] * i;
			}
			
			// si les classes sont pas vides
			if (omega1 * omega2 * omega3 !=0) {
				mu1 = somme1/omega1;
				mu2 = somme2/omega2;
				mu3 = somme3/omega3;
				
				sigma_between1 = omega1 * omega2 *( mu1 - mu2) * ( mu1 - mu2);
				sigma_between2 = omega2 * omega3 *( mu3 - mu2) * ( mu3 - mu2);
				sigma_between3 = omega1 * omega3 *( mu1 - mu3) * ( mu1 - mu3);
				
				sigma_between = sigma_between1 + sigma_between2 + sigma_between3;
				if (sigma_between > max_sigma_between) {
					seuil1 = t1;
					seuil2 = t2;
					max_sigma_between = sigma_between;
				}
			}
		}
	}
	print("Seuil 1 = ", seuil1, " / Seuil 2 = ", seuil2);
	
	// recomposer l'image seuill√©e
	classe1Value = 256/6*1;
	classe2Value = 256/6*2;
	classe3Value = 256/6*3;
	classe4Value = 256/6*4;
	classe5Value = 256/6*5;
	classe6Value = 256;
	selectWindow("image (blue)");
	run("Duplicate...", "title=seuillee");

	
	rouge=newArray(W*H);
	vert=newArray(W*H);
	// sauvegarde dans les tableau pour que ca aille plus vite
	selectWindow("image (red)");
	for (x = 0 ; x < W ; x++){
		for (y = 0 ; y < H ; y++){
			rouge[(x*H)+y] = getPixel(x,y);
		}
		
	}

	selectWindow("image (green)");
	for (x = 0 ; x < W ; x++){
		for (y = 0 ; y < H ; y++){
			vert[(x*H)+y] = getPixel(x,y);
		}
		
	}
	selectWindow("seuillee");
	for (x = 0 ; x < W ; x++){
		for (y = 0 ; y < H ; y++){
			//print(x,"/",y);
			// test si haut ou bas	
			if (rouge[(x*H)+y] < seuilRouge){
				//test si zone 1
				if (vert[(x*H)+y] < seuil1){	
					setPixel(x,y, classe1Value);
				} else {
					// test si zone2
					if (vert[(x*H)+y] < seuil2){
						setPixel(x,y, classe2Value);
					} else {
						setPixel(x,y, classe3Value);
					}
				}
			} else {				
				//test si zone 1
				if (vert[(x*H)+y] < seuil1){
					setPixel(x,y, classe1Value);
				} else {
					// test si zone2
					if (vert[(x*H)+y] < seuil2){
						setPixel(x,y, classe1Value);
					} else {
						setPixel(x,y, classe3Value);
					}
				}
			}
		}
	}
}
